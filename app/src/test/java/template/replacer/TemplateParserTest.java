/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package template.replacer;

import org.junit.Test;
import template.replacer.model.Replacement;
import template.replacer.model.Target;
import template.replacer.model.Template;

import java.io.IOException;
import java.util.List;
import java.util.Optional;

import static org.assertj.core.api.Assertions.assertThat;

public class TemplateParserTest {

    @Test
    public void parseTemplate() throws IOException {
        TemplateParser templateParser = new TemplateParser();
        List<Template> templates = templateParser.read(getClass().getResourceAsStream("/replacement.yml"));

        assertThat(templates).isEqualTo(
                List.of(new Template(
                        "/tmp/source",
                        Optional.of(
                                List.of(new Replacement(
                                                "1",
                                                "2",
                                                Optional.of(14)
                                        ),
                                        new Replacement(
                                                "3",
                                                "4",
                                                Optional.empty()
                                        )
                                )
                        ),
                        List.of(new Target(
                                        "/tmp/1",
                                        Optional.of(
                                                List.of(new Replacement(
                                                        "5",
                                                        "6",
                                                        Optional.empty()
                                                ))
                                        )
                                ),
                                new Target("/tmp/2", Optional.empty()),
                                new Target("/tmp/3", Optional.empty()),
                                new Target("/tmp/4", Optional.empty())
                        )
                ))
        );
    }

}
